<UserControl
    x:Class="Milki.OsuPlayer.UserControls.PlayController"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:buttonComponent="clr-namespace:Milki.OsuPlayer.UiComponents.ButtonComponent"
    xmlns:converters="clr-namespace:Milki.OsuPlayer.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:mixing="clr-namespace:Milki.OsuPlayer.Audio.Mixing;assembly=OsuPlayer.Audio"
    xmlns:models="clr-namespace:Milki.OsuPlayer.Shared.Models;assembly=OsuPlayer.Shared"
    xmlns:userControls="clr-namespace:Milki.OsuPlayer.UserControls"
    d:DataContext="{d:DesignInstance Type=userControls:PlayControllerVm,
                                     IsDesignTimeCreatable=False}"
    d:DesignHeight="46"
    d:DesignWidth="800"
    Initialized="UserControl_OnInitialized"
    TextBlock.FontFamily="{StaticResource GenericRegular}"
    mc:Ignorable="d">
    <UserControl.Resources>
        <converters:MsToStringConverter x:Key="MsToStringConverter" />
        <Style x:Key="FullScrButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <ContentPresenter />
                            <Border
                                x:Name="CoverBorder"
                                Background="#40000000"
                                Opacity="0">
                                <Border.CacheMode>
                                    <BitmapCache RenderAtScale="2" />
                                </Border.CacheMode>
                                <Viewbox
                                    Width="25"
                                    Height="25"
                                    Stretch="Uniform">
                                    <Viewbox.Effect>
                                        <DropShadowEffect
                                            BlurRadius="15"
                                            Opacity="0.4"
                                            ShadowDepth="0" />
                                    </Viewbox.Effect>
                                    <ContentControl Template="{StaticResource FullScrTempl}" />
                                </Viewbox>
                            </Border>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                                EasingFunction="{StaticResource CircEaseOut}"
                                                Storyboard.TargetName="CoverBorder"
                                                Storyboard.TargetProperty="Opacity"
                                                To="1"
                                                Duration="0:0:0.2" />
                                            <ObjectAnimationUsingKeyFrames
                                                Storyboard.TargetName="CoverBorder"
                                                Storyboard.TargetProperty="Visibility"
                                                Duration="0:0:0.2">
                                                <ObjectAnimationUsingKeyFrames.KeyFrames>
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                                                </ObjectAnimationUsingKeyFrames.KeyFrames>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard Storyboard.TargetName="CoverBorder">
                                            <DoubleAnimation
                                                EasingFunction="{StaticResource QuinticEaseOut}"
                                                Storyboard.TargetProperty="Opacity"
                                                To="0"
                                                Duration="0:0:0.3" />
                                            <ObjectAnimationUsingKeyFrames
                                                Storyboard.TargetName="CoverBorder"
                                                Storyboard.TargetProperty="Visibility"
                                                Duration="0:0:0.3">
                                                <ObjectAnimationUsingKeyFrames.KeyFrames>
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}" />
                                                </ObjectAnimationUsingKeyFrames.KeyFrames>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style
            x:Key="InvisibleButton"
            BasedOn="{StaticResource {x:Type buttonComponent:CommonButton}}"
            TargetType="buttonComponent:CommonButton">
            <Setter Property="Height" Value="Auto" />
            <Setter Property="MinWidth" Value="0" />
            <Setter Property="MinHeight" Value="0" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="BorderBrush" Value="White" />
            <Setter Property="MouseOverBackground" Value="#80F8F8F8" />
            <Setter Property="MouseDownBackground" Value="#80E8E8E8" />
            <Setter Property="IconMargin" Value="0" />
        </Style>
        <Style
            x:Key="LikeButtonStyle"
            BasedOn="{StaticResource {x:Type buttonComponent:CommonButton}}"
            TargetType="buttonComponent:CommonButton">
            <Setter Property="IconTemplate" Value="{StaticResource HeartDisabledTempl}" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding PlayerService.LastLoadContext.IsPlayItemFavorite}" Value="True">
                    <Setter Property="IconTemplate" Value="{StaticResource HeartEnabledTempl}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style
            x:Key="PlayListTypeUiButtonStyle"
            BasedOn="{StaticResource ToolUiButton}"
            TargetType="buttonComponent:UiButton">
            <Setter Property="Width" Value="24" />
            <Setter Property="Height" Value="24" />
            <Setter Property="IconSize" Value="18"></Setter>
            <Setter Property="CornerRadius" Value="3" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding PlayListService.PlayListMode}" Value="{x:Static models:PlayListMode.Normal}">
                    <Setter Property="IconTemplate" Value="{StaticResource ModeNormalTempl}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding PlayListService.PlayListMode}" Value="{x:Static models:PlayListMode.Random}">
                    <Setter Property="IconTemplate" Value="{StaticResource ModeRandomTempl}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding PlayListService.PlayListMode}" Value="{x:Static models:PlayListMode.Loop}">
                    <Setter Property="IconTemplate" Value="{StaticResource ModeLoopTempl}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding PlayListService.PlayListMode}" Value="{x:Static models:PlayListMode.LoopRandom}">
                    <Setter Property="IconTemplate" Value="{StaticResource ModeLoopRandomTempl}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding PlayListService.PlayListMode}" Value="{x:Static models:PlayListMode.Single}">
                    <Setter Property="IconTemplate" Value="{StaticResource ModeSingleTempl}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding PlayListService.PlayListMode}" Value="{x:Static models:PlayListMode.SingleLoop}">
                    <Setter Property="IconTemplate" Value="{StaticResource ModeSingleLoopTempl}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid x:Name="ToolControl" Background="{StaticResource TextureBrush3}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition MaxWidth="65" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Button
            x:Name="BtnThumb"
            MinWidth="61"
            MinHeight="46"
            MaxWidth="61"
            MaxHeight="46"
            Margin="1"
            Click="BtnThumb_OnClick"
            Style="{StaticResource FullScrButton}">
            <Image
                x:Name="Thumb"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                RenderOptions.BitmapScalingMode="HighQuality"
                Stretch="UniformToFill" />
        </Button>

        <StackPanel
            Grid.Column="1"
            Margin="10,0,10,0"
            Orientation="Horizontal">
            <buttonComponent:UiButton
                Click="BtnPrev_OnClick"
                IconTemplate="{StaticResource PrevTempl}"
                Style="{StaticResource ControlUiButton}" />
            <buttonComponent:UiButton
                Width="32"
                Height="32"
                Click="BtnPlay_OnClick">
                <Button.Style>
                    <Style BasedOn="{StaticResource ControlUiButton}" TargetType="buttonComponent:UiButton">
                        <Setter Property="IconMargin" Value="2,0,0,0" />
                        <Setter Property="IconSize" Value="20" />
                        <Setter Property="IconTemplate" Value="{StaticResource PlayTempl}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding PlayerService.PlayerStatus}" Value="{x:Static mixing:PlayerStatus.Playing}">
                                <Setter Property="IconMargin" Value="0" />
                                <Setter Property="IconSize" Value="16" />
                                <Setter Property="IconTemplate" Value="{StaticResource PauseTempl}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </buttonComponent:UiButton>
            <buttonComponent:UiButton
                Click="BtnNext_OnClick"
                IconTemplate="{StaticResource NextTempl}"
                Style="{StaticResource ControlUiButton}" />
            <buttonComponent:UiButton
                Background="{StaticResource OsuTextureBlueBrush}"
                Click="BtnOpen_OnClick"
                CornerRadius="14"
                IconTemplate="{StaticResource OpenTempl}"
                ShadowColor="#5d9cec"
                Style="{StaticResource ControlUiButton}">
                <buttonComponent:UiButton.MouseDownBackground>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Offset="0" Color="#3d7ccc" />
                        <GradientStop Offset="1" Color="#4d8cdc" />
                    </LinearGradientBrush>
                </buttonComponent:UiButton.MouseDownBackground>
                <buttonComponent:UiButton.MouseOverBackground>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Offset="0" Color="#5d9cec" />
                        <GradientStop Offset="1" Color="#4d8cdc" />
                    </LinearGradientBrush>
                </buttonComponent:UiButton.MouseOverBackground>
            </buttonComponent:UiButton>
        </StackPanel>
        <Grid Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid Margin="0,1,0,-3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <buttonComponent:UiButton
                    Margin="3,0"
                    Click="BtnMetadata_OnClick"
                    Style="{StaticResource ToolUiButton}">
                    <TextBlock FontSize="12">
                        <Run Foreground="#777777" Text="{Binding Title, Mode=OneWay}" />
                        <Run Foreground="#858585" Text="-" />
                        <Run Foreground="#AAAAAA" Text="{Binding Artist, Mode=OneWay}" />
                    </TextBlock>
                </buttonComponent:UiButton>
                <TextBlock
                    Grid.Column="2"
                    Margin="3"
                    FontSize="12">
                    <Run Foreground="#777777" Text="{Binding CurrentTime, Mode=OneWay, Converter={StaticResource MsToStringConverter}}" />
                    <Run Foreground="#858585" Text="/" />
                    <Run Foreground="#AAAAAA" Text="{Binding MaxTime, Mode=OneWay, Converter={StaticResource MsToStringConverter}}" />
                </TextBlock>
            </Grid>
            <Slider
                Grid.Row="1"
                Margin="3"
                Maximum="{Binding MaxTime}"
                Minimum="{Binding MinTime}"
                Thumb.DragCompleted="SldPlayProgress_OnDragCompleted"
                Thumb.DragStarted="SldPlayProgress_OnDragStarted"
                Value="{Binding CurrentTime}">
                <Slider.Style>
                    <Style BasedOn="{StaticResource HorizontalSliderPinkStyle}" TargetType="Slider">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsPlayerLoading}" Value="True">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsPlayerError}" Value="True">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsPlayerEmpty}" Value="True">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Slider.Style>
            </Slider>
        </Grid>
        <Grid Grid.Column="3">
            <StackPanel
                Margin="10,0"
                VerticalAlignment="Center"
                Orientation="Horizontal">
                <buttonComponent:UiButton
                    x:Name="BtnPlayListMode"
                    Click="BtnPlayListMode_OnClick"
                    Style="{StaticResource PlayListTypeUiButtonStyle}" />
                <buttonComponent:CommonButton
                    Width="23"
                    Height="23"
                    Margin="6"
                    VerticalAlignment="Center"
                    Background="Transparent"
                    BorderThickness="0"
                    Click="BtnLike_OnClick"
                    IconMargin="0"
                    IconSize="24"
                    MouseOverBackground="Transparent"
                    Style="{StaticResource LikeButtonStyle}" />
                <buttonComponent:CommonButton
                    x:Name="BtnVolume"
                    Width="23"
                    Height="23"
                    Margin="6"
                    VerticalAlignment="Center"
                    BorderThickness="0"
                    Click="BtnVolume_OnClick"
                    IconMargin="0"
                    IconSize="20"
                    IconTemplate="{StaticResource VolumeTempl}" />
                <buttonComponent:CommonButton
                    x:Name="BtnCurrentPlay"
                    Width="23"
                    Height="23"
                    Margin="6"
                    VerticalAlignment="Center"
                    BorderThickness="0"
                    Click="BtnCurrentPlay_OnClick"
                    IconMargin="0"
                    IconSize="18"
                    IconTemplate="{StaticResource PlayListTempl}" />
            </StackPanel>
        </Grid>
        <Popup
            x:Name="PopMode"
            Grid.Row="0"
            Grid.Column="0"
            Width="110"
            AllowsTransparency="True"
            HorizontalOffset="-44"
            Placement="Top"
            PlacementTarget="{Binding ElementName=BtnPlayListMode}"
            PopupAnimation="Fade"
            StaysOpen="False">
            <userControls:PlayModeControl x:Name="PlayModeControl" />
        </Popup>
        <Popup
            x:Name="PopPlayList"
            Grid.Row="0"
            Grid.Column="0"
            Width="600"
            Height="500"
            AllowsTransparency="True"
            HorizontalOffset="-570"
            Placement="Top"
            PlacementTarget="{Binding ElementName=BtnCurrentPlay}"
            PopupAnimation="Fade"
            StaysOpen="False">
            <userControls:CurrentPlayControl CloseRequested="CurrentPlayControl_OnCloseRequested" />
        </Popup>
        <Popup
            x:Name="PopVolume"
            Grid.Row="0"
            Grid.Column="0"
            MinWidth="170"
            AllowsTransparency="True"
            Placement="Top"
            PlacementTarget="{Binding ElementName=BtnVolume}"
            PopupAnimation="Fade"
            StaysOpen="False">
            <userControls:VolumeControl x:Name="VolumeControl" />
        </Popup>
    </Grid>
</UserControl>
